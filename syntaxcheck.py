# -*- coding: utf-8 -*-
"""syntaxCheck.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iJfBayLleyz9EymfCQ1rFtegztax4zvC
"""

#All the prediction table in a dictionary
predictions = [
    {
      'noTerminal' : 'PROGRAMA',
      'token' : 'programa',
      'production' : '1',
    },{
      'noTerminal' : 'CUERPO',
      'token' : 'variable',
      'production' : '2',
    },{
      'noTerminal' : 'CUERPO',
      'token' : '{',
      'production' : '3',
    },{
      'noTerminal' : 'DECLARACIONES',
      'token' : 'variable',
      'production' : '4',
    },{
      'noTerminal' : 'AUX-1',
      'token' : 'id',
      'production' : '5',
    },{
      'noTerminal' : 'AUX-1',
      'token' : '{',
      'production' : '6',
    },{
      'noTerminal' : 'LISTA-IDS',
      'token' : 'id',
      'production' : '7',
    },{
      'noTerminal' : 'AUX-2',
      'token' : ',',
      'production' : '8',
    },{
      'noTerminal' : 'AUX-2',
      'token' : ':',
      'production' : '9',
    },{
      'noTerminal' : 'TIPOS',
      'token' : 'enteros',
      'production' : '10',
    },{
      'noTerminal' : 'TIPOS',
      'token' : 'real',
      'production' : '10',
    },{
      'noTerminal' : 'TIPOS',
      'token' : 'cadena',
      'production' : '10',
    },{
      'noTerminal' : 'TIPOS',
      'token' : 'byte',
      'production' : '10',
    },{
      'noTerminal' : 'TIPOS',
      'token' : 'caracter',
      'production' : '10',
    },{
      'noTerminal' : 'TIPOS',
      'token' : 'booleano',
      'production' : '10',
    },{
      'noTerminal' : 'TIPOS',
      'token' : 'arreglo',
      'production' : '11',
    },{
      'noTerminal' : 'ESTANDAR',
      'token' : 'enteros',
      'production' : '12',
    },{
      'noTerminal' : 'ESTANDAR',
      'token' : 'real',
      'production' : '13',
    },{
      'noTerminal' : 'ESTANDAR',
      'token' : 'cadena',
      'production' : '14',
    },{
      'noTerminal' : 'ESTANDAR',
      'token' : 'byte',
      'production' : '15',
    },{
      'noTerminal' : 'ESTANDAR',
      'token' : 'caracter',
      'production' : '16',
    },{
      'noTerminal' : 'ESTANDAR',
      'token' : 'booleano',
      'production' : '17',
    },{
      'noTerminal' : 'PRINCIPAL',
      'token' : '{',
      'production' : '18',
    },{
      'noTerminal' : 'ESTATUTOS',
      'token' : 'id',
      'production' : '19',
    },{
      'noTerminal' : 'ESTATUTOS',
      'token' : 'repetir',
      'production' : '19',
    },{
      'noTerminal' : 'ESTATUTOS',
      'token' : 'para',
      'production' : '19',
    },{
      'noTerminal' : 'ESTATUTOS',
      'token' : 'mientras',
      'production' : '19',
    },{
      'noTerminal' : 'ESTATUTOS',
      'token' : 'leer',
      'production' : '19',
    },{
      'noTerminal' : 'ESTATUTOS',
      'token' : 'si',
      'production' : '19',
    },{
      'noTerminal' : 'ESTATUTOS',
      'token' : 'escribir',
      'production' : '19',
    },{
      'noTerminal' : 'AUX-ESTATUTOS',
      'token' : 'id',
      'production' : '20',
    },{
      'noTerminal' : 'AUX-ESTATUTOS',
      'token' : '}',
      'production' : '21',
    },{
      'noTerminal' : 'AUX-ESTATUTOS',
      'token' : 'repetir',
      'production' : '20',
    },{
      'noTerminal' : 'AUX-ESTATUTOS',
      'token' : 'hasta',
      'production' : '21',
    },{
      'noTerminal' : 'AUX-ESTATUTOS',
      'token' : 'para',
      'production' : '20',
    },{
      'noTerminal' : 'AUX-ESTATUTOS',
      'token' : 'mientras',
      'production' : '20',
    },{
      'noTerminal' : 'AUX-ESTATUTOS',
      'token' : 'leer',
      'production' : '20',
    },{
      'noTerminal' : 'AUX-ESTATUTOS',
      'token' : 'si',
      'production' : '20',
    },{
      'noTerminal' : 'AUX-ESTATUTOS',
      'token' : 'escribir',
      'production' : '20',
    },{
      'noTerminal' : 'VECTORES',
      'token' : 'arreglo',
      'production' : '22',
    },{
      'noTerminal' : 'AUX-VECTORES',
      'token' : ',',
      'production' : '23',
    },{
      'noTerminal' : 'AUX-VECTORES',
      'token' : ']',
      'production' : '24',
    },{
      'noTerminal' : 'ESTATUTO',
      'token' : 'id',
      'production' : '25',
    },{
      'noTerminal' : 'ESTATUTO',
      'token' : 'repetir',
      'production' : '28',
    },{
      'noTerminal' : 'ESTATUTO',
      'token' : 'para',
      'production' : '26',
    },{
      'noTerminal' : 'ESTATUTO',
      'token' : 'mientras',
      'production' : '27',
    },{
      'noTerminal' : 'ESTATUTO',
      'token' : 'leer',
      'production' : '29',
    },{
      'noTerminal' : 'ESTATUTO',
      'token' : 'si',
      'production' : '31',
    },{
      'noTerminal' : 'ESTATUTO',
      'token' : 'escribir',
      'production' : '30',
    },{
      'noTerminal' : 'ASIGNACION',
      'token' : 'id',
      'production' : '32',
    },{
      'noTerminal' : 'VARIABLE',
      'token' : 'id',
      'production' : '33',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : ';',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : ',',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : '[',
      'production' : '35',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : ']',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : '=',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : 'para',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : 'do',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : 'hacer',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : ')',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : 'entonces',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : '+',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : '-',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : 'o',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : '<',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : '>',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : '<=',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : '>=',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : '<>',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : '*',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : '/',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : 'division',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : 'modulo',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE',
      'token' : 'y',
      'production' : '34',
    },{
      'noTerminal' : 'AUX-VARIABLE2',
      'token' : ',',
      'production' : '36',
    },{
      'noTerminal' : 'AUX-VARIABLE2',
      'token' : ']',
      'production' : '37',
    },{
      'noTerminal' : 'CICLO-REPETIR',
      'token' : 'repetir',
      'production' : '38',
    },{
      'noTerminal' : 'CICLO-PARA',
      'token' : 'para',
      'production' : '39',
    },{
      'noTerminal' : 'CONTADOR',
      'token' : 'id',
      'production' : '40',
    },{
      'noTerminal' : 'CICLO-MIENTRAS',
      'token' : 'mientras',
      'production' : '41',
    },{
      'noTerminal' : 'ENTRADA',
      'token' : 'leer',
      'production' : '42',
    },{
      'noTerminal' : 'ENTRADA',
      'token' : 'leer',
      'production' : '42',
    },{
      'noTerminal' : 'AUX-ENTRADA',
      'token' : ',',
      'production' : '44',
    },{
      'noTerminal' : 'AUX-ENTRADA',
      'token' : ')',
      'production' : '43',
    },{
      'noTerminal' : 'SALIDA',
      'token' : 'escribir',
      'production' : '45',
    },{
      'noTerminal' : 'AUX-SALIDA',
      'token' : ',',
      'production' : '47',
    },{
      'noTerminal' : 'AUX-SALIDA',
      'token' : ')',
      'production' : '46',
    },{
      'noTerminal' : 'CONDICIONAL-SI',
      'token' : 'si',
      'production' : '48',
    },{
      'noTerminal' : 'AUX-IFSI',
      'token' : 'sino',
      'production' : '49',
    },{
      'noTerminal' : 'AUX-IFSI',
      'token' : 'fin_sino',
      'production' : '50',
    },{
      'noTerminal' : 'EXPRESION',
      'token' : 'id',
      'production' : '51',
    },{
      'noTerminal' : 'EXPRESION',
      'token' : 'cte.entera',
      'production' : '51',
    },{
      'noTerminal' : 'EXPRESION',
      'token' : '(',
      'production' : '51',
    },{
      'noTerminal' : 'EXPRESION',
      'token' : 'verdadero',
      'production' : '51',
    },{
      'noTerminal' : 'EXPRESION',
      'token' : 'falso',
      'production' : '51',
    },{
      'noTerminal' : 'EXPRESION',
      'token' : 'cte.real',
      'production' : '51',
    },{
      'noTerminal' : 'EXPRESION',
      'token' : 'cte.cadena',
      'production' : '51',
    },{
      'noTerminal' : 'EXPRESION',
      'token' : 'no',
      'production' : '51',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : ';',
      'production' : '53',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : ',',
      'production' : '53',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : ']',
      'production' : '53',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : '=',
      'production' : '52',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : 'para',
      'production' : '53',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : 'do',
      'production' : '53',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : 'hacer',
      'production' : '53',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : ')',
      'production' : '53',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : 'entonces',
      'production' : '53',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : '<',
      'production' : '52',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : '>',
      'production' : '52',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : '<=',
      'production' : '52',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : '>=',
      'production' : '52',
    },{
      'noTerminal' : 'AUX-EXPRESION',
      'token' : '<>',
      'production' : '52',
    },{
      'noTerminal' : 'EXP',
      'token' : 'id',
      'production' : '54',
    },{
      'noTerminal' : 'EXP',
      'token' : 'cte.entera',
      'production' : '54',
    },{
      'noTerminal' : 'EXP',
      'token' : '(',
      'production' : '54',
    },{
      'noTerminal' : 'EXP',
      'token' : 'verdadero',
      'production' : '54',
    },{
      'noTerminal' : 'EXP',
      'token' : 'falso',
      'production' : '54',
    },{
      'noTerminal' : 'EXP',
      'token' : 'cte.real',
      'production' : '54',
    },{
      'noTerminal' : 'EXP',
      'token' : 'cte.cadena',
      'production' : '54',
    },{
      'noTerminal' : 'EXP',
      'token' : 'no',
      'production' : '54',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : '<>',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : '>=',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : '<=',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : '>',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : '<',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : 'o',
      'production' : '57',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : '-',
      'production' : '56',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : '+',
      'production' : '55',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : 'entonces',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : ')',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : 'hacer',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : 'do',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : 'para',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : '=',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : ']',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : ',',
      'production' : '58',
    },{
      'noTerminal' : 'AUX-EXP',
      'token' : ';',
      'production' : '58',
    },{
      'noTerminal' : 'RELACIONAL',
      'token' : '=',
      'production' : '59',
    },{
      'noTerminal' : 'RELACIONAL',
      'token' : '<',
      'production' : '60',
    },{
      'noTerminal' : 'RELACIONAL',
      'token' : '>',
      'production' : '61',
    },{
      'noTerminal' : 'RELACIONAL',
      'token' : '<=',
      'production' : '62',
    },{
      'noTerminal' : 'RELACIONAL',
      'token' : '>=',
      'production' : '63',
    },{
      'noTerminal' : 'RELACIONAL',
      'token' : '<>',
      'production' : '64',
    },{
      'noTerminal' : 'TERMINO',
      'token' : 'id',
      'production' : '65',
    },{
      'noTerminal' : 'TERMINO',
      'token' : 'cte.entera',
      'production' : '65',
    },{
      'noTerminal' : 'TERMINO',
      'token' : '(',
      'production' : '65',
    },{
      'noTerminal' : 'TERMINO',
      'token' : 'verdadero',
      'production' : '65',
    },{
      'noTerminal' : 'TERMINO',
      'token' : 'falso',
      'production' : '65',
    },{
      'noTerminal' : 'TERMINO',
      'token' : 'cte.real',
      'production' : '65',
    },{
      'noTerminal' : 'TERMINO',
      'token' : 'cte.cadena',
      'production' : '65',
    },{
      'noTerminal' : 'TERMINO',
      'token' : 'no',
      'production' : '65',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : ';',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : ']',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : '=',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : 'para',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : 'do',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : 'hacer',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : ')',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : 'entonces',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : '+',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : '-',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : 'o',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : '<',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : '>',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : '<=',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : '>=',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : '<>',
      'production' : '71',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : '*',
      'production' : '66',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : '/',
      'production' : '67',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : 'division',
      'production' : '68',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : 'modulo',
      'production' : '69',
    },{
      'noTerminal' : 'AUX-TERMINO',
      'token' : 'y',
      'production' : '70',
    },{
      'noTerminal' : 'FACTOR',
      'token' : 'id',
      'production' : '73',
    },{
      'noTerminal' : 'FACTOR',
      'token' : 'cte.entera',
      'production' : '76',
    },{
      'noTerminal' : 'FACTOR',
      'token' : '(',
      'production' : '72',
    },{
      'noTerminal' : 'FACTOR',
      'token' : 'verdadero',
      'production' : '74',
    },{
      'noTerminal' : 'FACTOR',
      'token' : 'falso',
      'production' : '75',
    },{
      'noTerminal' : 'FACTOR',
      'token' : 'cte.real',
      'production' : '77',
    },{
      'noTerminal' : 'FACTOR',
      'token' : 'cte.cadena',
      'production' : '78',
    },{
      'noTerminal' : 'FACTOR',
      'token' : 'no',
      'production' : '79',
    },

    ]
#///////////////////////END OF PREDICTION TABLE////////////////////////////////

#Declaring all the productions in a dictionary
productions =dict(
    {
      '1' : '. CUERPO ; id programa',
      '2' : 'PRINCIPAL DECLARACIONES',
      '3' : 'PRINCIPAL',
      '4' : 'AUX-1 ; TIPOS : LISTA-IDS variable',
      '5' : 'AUX-1 ; TIPOS : LISTA-IDS',
      '6' : '',
      '7' : 'AUX-2 id',
      '8' : 'AUX-2 id ,',
      '9' : '',
      '10' : 'ESTANDARD',
      '11' : 'VECTORES',
      '12' : 'enteros',
      '13' : 'reales',
      '14' : 'cadena',
      '15' : 'byte',
      '16' : 'caracter',
      '17' : 'booleano',
      '18' : '} ESTATUTOS {',
      '19' : 'AUX-ESTATUTOS ; ESTATUTO',
      '20' : 'AUXESTATUTOS ; ESTATUTO',
      '21' : '',
      '22' : 'ESTANDAR de ] AUX-VECTORES cte.entera .. cte.entera [ arreglo',
      '23' : 'AUX-VECTORES cte.entera .. cte.entera ,',
      '24' : '',
      '25' : 'ASIGNACION',
      '26' : 'CICLO-PARA',
      '27' : 'CICLO-MIENTRAS',
      '28' : 'CICLO-REPETIR',
      '29' : 'ENTRADA',
      '30' : 'SALIDA',
      '31' : 'CONDICIONAL-SI',
      '32' : 'EXPRESION = VARIABLE',
      '33' : 'AUX-VARIABLE id',
      '34' : '',
      '35' : '] AUX-VARIABLE2 EXPRESION [',
      '36' : 'AUX-VARIABLE2 EXPRESION ,',
      '37' : '',
      '38' : 'EXPRESION hasta ESTATUTOS repetir',
      '39' : '} ESTATUTOS { do CONTADOR para',
      '40' : 'EXPRESION para EXPRESION = id',
      '41' : '} ESTATUTOS { hacer EXPESION mientras',
      '42' : ') AUX-ENTRADA VARIABLE ( leer',
      '43' : '',
      '44' : 'AUX-ENTRADA VARIABLE ,',
      '45' : ') AUX-SALIDA EXPRESION ( escribir',
      '46' : '',
      '47' : 'AUX-SALIDA EXPRESION ,',
      '48' : 'fin_sino AUX-IFSI } ESTATUTOS { entonces EXPRESION si',
      '49' : '} ESTATUTOS { sino ',
      '50' : '',
      '51' : 'AUX-EXPRESION EXP',
      '52' : 'EXP RELACIONAL',
      '53' : '',
      '54' : 'AUX-EXP TERMINO',
      '55' : 'AUX-EXP TERMINO +',
      '56' : 'AUX-EXP TERMINO -',
      '57' : 'AUX-EXP TERMINO o',
      '58' : '',
      '59' : '=',
      '60' : '<',
      '61' : '>',
      '62' : '<=',
      '63' : '>=',
      '64' : '<>',
      '65' : 'AUX-TERMINO FACTOR',
      '66' : 'AUX-TERMINO FACTOR *',
      '67' : 'AUX-TERMINO FACTOR /',
      '68' : 'AUX-TERMINO FACTOR division',
      '69' : 'AUX-TERMINO FACTOR modulo',
      '70' : 'AUX-TERMINO FACTOR y',
      '71' : '',
      '72' : ') EXPRESION (',
      '73' : 'VARIABLE',
      '74' : 'verdadero',
      '75' : 'falso',
      '76' : 'cte.entera',
      '77' : 'cte.real',
      '78' : 'cte.cadena',
      '79' : 'EXPRESION no',
    }
)

#//////////////////END OF ALL PRODUCTIONS/////////////////////////////////


#Function that separates a word in every space and make it an array
def separate_words(string):
    words = string.split()
    return words

#Function that makes al de comparative proccess
def analyze(sc):
  #---------Initialize all variable------------
  flag = True
  numProduction = ''
  left = ['$','PROGRAMA']
  right = sc.split()
  right.append("$")
  transition = True
  errorMsg = ''
  #---------------------------------------------

  #Looping on wait to end all the word or found an error
  while flag:
    #Using the predictions tables as p to access the data
    for p in predictions:
      #Checking if the words are terminal and the same to erase them
      if(left[-1] == right[0]):
        errorMsg += right[0] + " "
        left.pop(-1)
        right.pop(0)
        #checking if it was the last word to validate (the code was correct)
        if(len(left) == 0 and len(right) == 0):
          flag = False
          print('The Source Code is valid\n')
          print(sc)
          print("------------------------------- \n")
        break
      #Making the comparison to see if there is a transition on the prediction table and add it to the left
      elif(right[0] in p['token'] and left[-1] == p['noTerminal']):
        numProduction = p['production']
        left.pop(-1)
        left += separate_words(productions[numProduction])
        transition = True
        break
      #If there was no transition we're facing an error so we change transition to false
      else:
        transition = False

    #Checking if the transition ended so we stop the program in the two cases Success/Error
    if(transition == False):
      print("Error detected here: \n")
      print(errorMsg + ' <-- \n')
      expectedValues = []
      #Generating an error msg to tell witch cases can be true
      for p in predictions:
        if(p['noTerminal'] == left[-1]):
          expectedValues.append(p['token'])
      print("Syntax error " , '"' , left[-1] , '"' , " expected \n")

      print("---------This are possible expected values-----------")
      for p in expectedValues:
        print("|                  " , p)
      flag = False
      print("-----------------------------------------------------  \n \n")



#Array of codes to analize
codes = ["""programa id ;
{
  id = cte.cadena ;
} .
""" ,

"""programa id ;
{
  si ( verdadero ) entonces {
     id = cte.real ;
  }
  sino {
     id = cte.entera ;
  }
  fin_sino
; } .
""",

"""programa id ;
{
  id = cte.cadena
} .
"""]

for sourceC in codes:
  analyze(sourceC)

"""HASH TABLE"""

"""
hash ex.
  {varName} : {
    type: {varType},
    scope: {varScope},
    content: {varContent}
    }

"""

hashT ={ }

#Search if the variable exist
def search(name):
  try:
    if hashT[name] != "":
      return True
  except:
    return False

#Add a new variable to the hash table
def add(var, vtype, vscope, vcontent):
  if search(var):
    print(var, " is already in hash table")
  else:
    hashT[var] = {
        'type'    : vtype,
        'scope'   : vscope,
        'content' : vcontent
    }
    print(var, " sucessfully added to the hash table")

#Modify a variable in case it is on the hash table
def modify(var, vtype, vscope, vcontent):
  if search(var):
    hashT.update({var : {'type'    : vtype, 'scope'   : vscope, 'content' : vcontent}})
    print("Variable ", var, " updated!")
  else:
    print("The variable doesn't exist")



add("num", "insertion", "global", "cte.real")
add("num1", "insertion", "global", "cte.flotante")

hashT